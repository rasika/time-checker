apply plugin: "java"
apply plugin: "com.github.spotbugs"
apply plugin: 'jacoco'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

sourceCompatibility = JavaVersion.VERSION_1_8

spotbugsMain {
    it.effort "max"
    it.reportLevel "low"
    it.reports {
        xml.enabled false
        html.enabled true
    }
    def excludeFile = file('spotbugs-exclude.xml')
    if(excludeFile.exists()) {
        it.excludeFilter = excludeFile
    }
}

spotbugsTest {
    it.enabled = false
}

task validateSpotbugs() {
    doLast {
        if (spotbugsMain.reports.size() > 0 &&
                spotbugsMain.reports[0].destination.exists() &&
                spotbugsMain.reports[0].destination.text.readLines().size() > 0) {
            spotbugsMain.reports[0].destination?.eachLine {
                println 'Failure: ' + it
            }
            throw new GradleException("Spotbugs rule violations were found.");
        }
    }
}

spotbugsMain.finalizedBy validateSpotbugs

jacocoTestReport {
    reports {
        xml.enabled true
    }
}


test {
    useJUnitPlatform()

    afterSuite { suite, result ->
        result.exception?.printStackTrace()
    }

    testLogging {
        // this will only change --warn flag behaviour
        warn {
            events = ["failed", "skipped"]
            exceptionFormat "full"
        }
    }
}
